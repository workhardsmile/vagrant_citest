#user  nobody;
user  www-data www-data;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    passenger_root /home/railsu/.rvm/gems/ruby-1.9.3-p551/gems/passenger-5.1.2;
    passenger_ruby /home/railsu/.rvm/gems/ruby-1.9.3-p551/wrappers/ruby;
    passenger_max_pool_size 10;

    keepalive_timeout  600;
    #types_hash_bucket_size 64;
    #server_names_hash_bucket_size 128;

    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 30M;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #gzip  on;
    index              index.php index.html index.htm;
    #upstream php {
        #this should match value of "listen" directive in php-fpm pool
        #server unix:/var/run/php/php5.6-fpm.sock; }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        root /opt/test-plus/public;
        passenger_enabled on;
        rails_env production;

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       8001;
        server_name  localhost;

        root /opt/testplus-logserver/public;
        passenger_enabled on;
        rails_env production;

        location ~ ^/assets/ {
          expires 1y;
          add_header Cache-Control public;
          add_header ETag "";
          break;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
        listen       8002;
        server_name  localhost;

        root /opt/update-testlink/public;
        passenger_enabled on;
        rails_env production;

        location ~ ^/assets/ {
          expires 1y;
          add_header Cache-Control public;
          add_header ETag "";
          break;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
	listen       8003;
        server_name  127.0.0.1;
        #listen 8003 default_server;
        #listen [::]:8003 default_server ipv6only=on;

        root /opt/testlink;
        index index.php;

        location / {
            # try to serve file directly, fallback to front controller
            try_files $uri /index.php$is_args$args;
        }

        # If you have 2 front controllers for dev|prod use the following line instead
        # location ~ ^/(index|index_dev)\.php(/|$) {
        location ~ [^/]\.php(/|$) {
            fastcgi_pass unix:/var/run/php/php5.6-fpm.sock;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS off;
            fastcgi_param APP_ENV development;
        }

        #return 404 for all php files as we do have a front controller
        location ~ \.php$ {
            return 404;
        }

        #error_log /var/log/nginx/project_error.log;
        #access_log /var/log/nginx/project_access.log;
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}